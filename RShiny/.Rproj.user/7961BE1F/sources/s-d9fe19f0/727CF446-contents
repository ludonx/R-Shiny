library(jsonlite)


ajouter_un_projet<-
  function(JsonFileNameCollectionprojet='ajouter_un_projet.json', path ='~/GIT_LAB_test/iogoldg/RShiny/ShinyDashboard/Tutoriels/'){
    # on commence par récupérer les données du le fichier JSON qui contient
    # les informations sur les differente collection du projet
    cat("\n[ lecture des collection ]")
    listeCollectionprojet<-
      read_json(
        path=paste0(path,JsonFileNameCollectionprojet),
        simplifyVector = TRUE
      )
    
    ## On ajout des données des collections dans la base de donnée
    cat("\n[ Ajout dans MongoDB ]")
    ajouter_un_projet_mongodb(listeCollectionprojet)
    
    ## On rend les données des collections accessibles via l'application
    cat("\n[ Ajout dans shiny ]")
    ajouter_un_projet_shiny(
      listeCollectionprojet,
      projetCollectionName='projects',
      collectionOfcollectionName='collections')
        
  }

####################################################################################################
ajouter_un_projet_mongodb<-
  function(listeCollectionprojet){
    
    nbrCollection<-nrow(listeCollectionprojet)
    databaseName<-listeCollectionprojet[i,"database"]
    
    for(i in 1:nbrCollection){
      collectionName<-
        paste0(listeCollectionprojet[i,"obs_collection"],
               listeCollectionprojet[i,"catalog"],
               listeCollectionprojet[i,"version"],
               listeCollectionprojet[i,"project"])
      
      path_to_collection<-paste0(listeCollectionprojet[i,"path"])
      
      # si les données sont stockées dans plusieur fichier mais avec un nom commun
      # exemple : ICGgenes_1_1000.json /  ICGgenes_1000_2000.json ...
      # dans ce cas on indique uniquement le nom commun : ICGgenes
      common_json_file_name<-path_to_collection<-paste0(listeCollectionprojet[i,"common_json_file_name"])
      ######################################################################################################
      
      cat("\n******************* [Début ajout collection : ",collectionName,"]")
      
      GenerateMyDataMultiAdmin(
        databaseName,
        collectionName,
        common_json_file_name,
        path_to_collection)
      
      cat("\n******************* [Fin ajout collection : ",collectionName,"]\n")
      ######################################################################################################
    }#end for
  }
################################################################################################################################
ajouter_un_projet_shiny<-
  function(listeCollectionprojet,projetCollectionName='projects',collectionOfcollectionName='collections'){
    
    cat("\n******************* [Récupération des données : ]")
    nbrCollection<-nrow(listeCollectionprojet)
    
    
    
    # contient la liste des collection du projet
    collections<-vector(mode="character",length = nbrCollection)
    databaseName<-listeCollectionprojet[1,"database"]
    
    for(i in 1:nbrCollection){
      if(listeCollectionprojet[i,"catalog"]!="")
        catalogName<-paste0(listeCollectionprojet[i,"projects"],listeCollectionprojet[i,"version"])
      
      collectionName<-
        paste0(listeCollectionprojet[i,"obs_collection"],
               listeCollectionprojet[i,"catalog"],
               listeCollectionprojet[i,"version"],
               listeCollectionprojet[i,"project"])
      
      collections[i]<-collectionName
      
      
      ############# STATISTIQUE DE MA COLLECTION ######################
      cat("\n LES STATISTIQUES DE : ",collectionName)
      number_lines<-countAll(databaseName,collectionName)
      number_columns<-ncol(findLimit(databaseName,collectionName,10))
      size<-0
      type<-"obs"
      v<-listeCollectionprojet[i,"version"]
      queryInsert<-
        paste0(
          '{"name" : "',collectionName,'",',
          '"number_lines" : ',number_lines,',',
          '"number_columns" : ',number_columns,',',
          '"size" : ',size,',',
          
          '"type" : "',type,'",',
          '"database" : "',databaseName,'",',
          '"catalog" : "',catalogName,'",',
          '"version" : "',v,'",',
          '"project" : "',projetProjectName,'",',
          '"database" : "',databaseName,'"}'
        )
      db<-loadDataBase(databaseName,collectionOfcollectionName)
      db$insert(queryInsert)
      # Automatically disconnect when connection is removed
      rm(db)
      gc()
      

    }#end for
    cat("\n******************* [Insertion des données dans la collection ",collectionName," : ]")
    # on ajout les informations sur le nouveau projet
    # dans la collection projet qui est liée a l'application 
    queryInsert<-
      paste0(
        '{"name" : "',projetName,'",',
        '"catalog" : "',catalogName,'",',
        '"version" : "',v,'",',
        '"database" : "',databaseName,'"}'
      )
    db<-loadDataBase(databaseName,projetCollectionName)
    db$insert(queryInsert)
    # Automatically disconnect when connection is removed
    rm(db)
    gc()
    myUpdateQueryMongoSimple(databaseName,
                             projetCollectionName,
                             myQueryUnique('name',projetName),
                             myQueryPushChaine('collections',collections)
    )
    cat("\n******************* [Fin insertion des données dans la collection ",collectionName," : ]\n")
    
    
    return(collections)
  }
