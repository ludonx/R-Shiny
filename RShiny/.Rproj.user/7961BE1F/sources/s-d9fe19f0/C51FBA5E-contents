serverReglage<-
  function(input, output, session,globalInformation){
    
    observeEvent(input$ActionDeconnexion,{
      # Create a Progress object
      progress <- shiny::Progress$new()
      # Make sure it closes when we exit this reactive, even if there's an error
      on.exit(progress$close())
      progress$set(message = "DÃ©connexion en cours ...", value = 0)
      progress$inc(1/3)
      
      app$users[[globalInformation$user$email]] <<- NULL
      
      
      myUpdateQueryMongoSimple(
        globalInformation$globalDatabase,
        globalInformation$usersCollections,
        myQueryUnique("email",globalInformation$user$email),
        myQuerySetChaine("connecter",0)
      )
      progress$inc(1/3)
      newdata<-data.frame()
      for(i in 1:nrow(app$users$tracking)){
        if(!is.null(app$users$tracking[i,"email"])){
          if(app$users$tracking[i,"email"]==globalInformation$user$email){
            
          }else{
            newdata<-rbind(newdata,app$users$tracking[i,])
          }
        }
        
        
      }
      cat("\navant : newdata = ",nrow(newdata))
      cat("\navant : app$users$tracking = ",nrow(app$users$tracking))
      # nouvelle liste des utilisateur connecter
      app$users$tracking<-data.frame()
      app$users$tracking<-rbind(app$users$tracking,newdata)
      
      cat("\napres : newdata = ",nrow(newdata))
      cat("\napres : app$users$tracking = ",nrow(app$users$tracking))
      globalInformation$user$connected = FALSE
      
      progress$inc(1/3)
      
      #### on recharge la session
      session$reload()
    })
  }